/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package kalorimanager.ui;
import com.mongodb.MongoException;
import java.awt.event.ActionEvent;
import kalorimanager.util.CryptoUtil;
import kalorimanager.util.MongoUtil;
import kalorimanager.model.User;
import org.bson.Document;
import com.mongodb.client.MongoCollection;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import kalorimanager.util.I18n;

/**
 *
 * @author ASUS
 */
public class RegisterFrame extends javax.swing.JFrame {

    /**
     * Creates new form RegisterFrame
     */
    public RegisterFrame() {
        initComponents();
        setTitle("KaloriManager - Register");
        setLocationRelativeTo(null);
        initLanguageComboBox();
    }

    private void initLanguageComboBox() {
    if (ComboBahasa != null) {
        // Hapus listener sementara
        ActionListener[] listeners = ComboBahasa.getActionListeners();
        for (ActionListener listener : listeners) {
            ComboBahasa.removeActionListener(listener);
        }

        ComboBahasa.removeAllItems();
        ComboBahasa.addItem("EN");
        ComboBahasa.addItem("ID");
        ComboBahasa.setSelectedItem("EN");

        // Tambahkan kembali listener
        for (ActionListener listener : listeners) {
            ComboBahasa.addActionListener(listener);
        }
    }
}

    private void updateTexts() {
        setTitle("KaloriManager - " + I18n.get("register"));
        lblUsername.setText(I18n.get("username") + ":");
        lblPassword.setText(I18n.get("password") + ":");
        btnBack.setText(I18n.get("back"));
        btnRegister.setText(I18n.get("register"));
    }

    private void registerUser() {
    // 1. Ambil input dengan trim() untuk menghilangkan spasi
    String username = txtUsername.getText().trim();
    String password = txtPassword.getText(); // Menggunakan getText() dari JTextField

    try {
        // 2. Validasi input
        if (username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                I18n.get("register_validation_empty"),
                I18n.get("error"),
                JOptionPane.ERROR_MESSAGE);
            return;
        }

        // 3. Validasi tambahan username
        if (username.contains(" ")) {
            JOptionPane.showMessageDialog(this,
                "Username tidak boleh mengandung spasi",
                "Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }

        // 4. Cek duplikasi username
        MongoCollection<Document> usersCollection = MongoUtil.getDB().getCollection("users");
        Document existingUser = usersCollection.find(new Document("username", username)).first();

        if (existingUser != null) {
            JOptionPane.showMessageDialog(this, 
                I18n.get("register_validation_exists"),
                I18n.get("warning"),
                JOptionPane.WARNING_MESSAGE);
            return;
        }

        // 5. Hash password (wajib karena menggunakan JTextField)
        String hashedPassword = CryptoUtil.hashPassword(password);

        // 6. Buat dokumen user baru
        Document newUser = new Document()
            .append("username", username)
            .append("passwordHash", hashedPassword)
            .append("createdAt", new java.util.Date())
            .append("language", ComboBahasa.getSelectedItem().toString()); // Pastikan huruf kecil 'comboBahasa'

        // 7. Simpan ke database
        usersCollection.insertOne(newUser);

        // 8. Feedback sukses
        JOptionPane.showMessageDialog(this,
            I18n.get("register_success"),
            I18n.get("success"),
            JOptionPane.INFORMATION_MESSAGE);

        // 9. Kembali ke login
        this.dispose();
        new LoginFrame().setVisible(true);

    } catch (MongoException e) {
        JOptionPane.showMessageDialog(this,
            "Database error: " + e.getMessage(),
            "Error",
            JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this,
            "Unexpected error: " + e.getMessage(),
            "Error",
            JOptionPane.ERROR_MESSAGE);
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        btnRegister = new javax.swing.JButton();
        ComboBahasa = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));

        lblUsername.setText("Username : ");

        lblPassword.setText("Password : ");

        btnBack.setBackground(new java.awt.Color(204, 204, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnRegister.setBackground(new java.awt.Color(204, 204, 255));
        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        ComboBahasa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboBahasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBahasaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblUsername)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPassword)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPassword))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)))
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ComboBahasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(ComboBahasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnRegister))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose(); // Tutup RegisterFrame
        new LoginFrame().setVisible(true); // Kembali ke Login
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        registerUser();
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void ComboBahasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBahasaActionPerformed
       try {
        String selected = (String) ComboBahasa.getSelectedItem();
        if (selected != null) {
            String langCode = selected.equals("ID") ? "id" : "en";
            I18n.setLanguage(langCode);
            updateTexts();
        }
        } catch (Exception e) {
            System.err.println("Error mengubah bahasa: " + e.getMessage());
            // Fallback ke bahasa Inggris
            I18n.setLanguage("en");
        }
    }//GEN-LAST:event_ComboBahasaActionPerformed

    /**
     * @param args the command line arguments
     */

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBahasa;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
